plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

android {
    namespace 'com.minotawr.storyapp'
    compileSdk 33

    defaultConfig {
        applicationId "com.minotawr.storyapp"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField "String", "DATABASE_NAME", '"story_database"'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "DATABASE_NAME", '"story_database_release"'
        }
    }

    buildFeatures {
        viewBinding true
        buildConfig true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ["-opt-in=kotlin.RequiresOptIn"]
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'junit:junit:4.12'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp_version"

    // DataStore
    implementation "androidx.datastore:datastore-preferences:$versions.datastore_version"

    // Room
    implementation("androidx.room:room-runtime:$versions.room_version")
    kapt("androidx.room:room-compiler:$versions.room_version")
    implementation("androidx.room:room-ktx:$versions.room_version")
    implementation("androidx.room:room-paging:$versions.room_version")
    testImplementation("androidx.room:room-testing:$versions.room_version")

    // Paging
    implementation("androidx.paging:paging-runtime-ktx:$versions.paging_version")
    implementation("androidx.room:room-paging:$versions.room_paging_version")

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle_version"

    // Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine_version"

    // Dependency Injection
    implementation "io.insert-koin:koin-android:$versions.koin_android_version"

    // Utils
    implementation "com.github.bumptech.glide:glide:$versions.glide_version"
    implementation "androidx.exifinterface:exifinterface:$versions.exif_version"

    // Unit Test
    testImplementation("androidx.arch.core:core-testing:$versions.arch_testing_version") // InstantTaskExecutorRule
    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutine_version") //TestDispatcher
    testImplementation("org.mockito:mockito-core:$versions.mockito_version")
    testImplementation("org.mockito:mockito-inline:$versions.mockito_version")
    testImplementation "app.cash.turbine:turbine:$versions.turbine_version"
}